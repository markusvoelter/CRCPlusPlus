@startuml
skinparam class {
  BackgroundColor #e5f4f9
  BackgroundColor<<data>> #8dc6d9
  BackgroundColor<<proxy>> #8dc6d9
  ArrowColor #003233
  BorderColor #003233
  ArrowThickness 1.5
  BorderThickness 1.5
  FontColor #003233
}
skinparam linetype polyline
hide circles
hide stereotype
set separator ::

class "<b><size:16>TheFirstType</size></b>" as TheFirstType  {
-- Responsibilities --
  <b>[R]</b> A responsibility for <b>TheFirstType</b>
  :::<b>[E]</b> An example for the responsibility
-- Examples --
  <b>[E]</b> An example for the Type
}
TheFirstType --> Package::ASecondType : A collaboration with\nPackage::ASecondType
TheFirstType --> ADataType : Creates ADataType
class "<b><size:16>ASecondType</size></b>" as Package::ASecondType  {
-- Responsibilities --
  <b>[R]</b> consumes fuel
}
note top of Package::ASecondType : <b>[Q]</b> A Question for ASecondType
note top of Package::ASecondType : <b>[R]</b> A rationale for ASecondType
Package::ASecondType --> ADataType : Read ADataType
class "<b><size:16>ASecondTypeBla</size></b>" as Package::ASecondTypeBla  {
-- Responsibilities --
  <b>[R]</b> it does other stuff
}
Package::ASecondTypeBla --> ADataType : Reads and writes\nADataType
Package::ASecondType <|-- Package::ASecondTypeBla
circle SomethingFromSomewhere
class "<b><size:16>ADataType [*]</size></b>" as ADataType <<data>> {
-- Responsibilities --
  <b>[R]</b> stores some stuff
  :::<b>[E]</b> such as bananas
}
ADataType --> SomethingFromSomewhere : also does something with\nSomethingFromSomewhere
@enduml
