@startuml
skinparam class {
  BackgroundColor #e5f4f9
  BackgroundColor<<data>> #8dc6d9
  BackgroundColor<<proxy>> #8dc6d9
  ArrowColor #003233
  BorderColor #003233
  ArrowThickness 1.5
  BorderThickness 1.5
  FontColor #003233
}
skinparam linetype polyline
skinparam groupInheritance 2
hide circles
hide stereotype
set separator ::

class "<b><size:16>Repository</size></b>" as Repository  {
-- Properties --
  <b>[P]</b> Is the central hub to which the other components\nconnect, at least logically
}
note top of Repository : <b>[Q]</b> Is it really physically a\ncentralized component?
Repository --> Model : stores the
class "<b><size:16>Editor</size></b>" as Editor  {
-- Properties --
  <b>[P]</b> Can be graphical, textual, projectional, etc.
-- Responsibilities --
  <b>[R]</b> interacts with the users
}
Editor --> PrimaryModel : Updates the $ based on\nuser's editing gestures
class "<b><size:16>Processor</size></b>" as Processor  {
-- Responsibilities --
  <b>[R]</b> Can create external artifacts
  :::<b>[E]</b> generators producing text
}
Processor --> PrimaryModel : Updates the $\nautomatically based on\nalgorithms
Processor --> DerivedModel : Creates and updates the $\nbased on algorithms
class "<b><size:16>Model [*]</size></b>" as Model <<data>> {
-- Properties --
  <b>[P]</b> Consists of nodes and edges typed based on a meta\nmodel
}
class "<b><size:16>PrimaryModel [*]</size></b>" as PrimaryModel <<data>> {
-- Properties --
  <b>[P]</b> Models that cannot be recomputed from others,\nalways persistet
}
Model <|-- PrimaryModel
class "<b><size:16>DerivedModel [*]</size></b>" as DerivedModel <<data>> {
-- Properties --
  <b>[P]</b> Models that are derived from other primary or\nderived models; optionally persisted
}
note top of DerivedModel : <b>[W]</b> They can be persisted because\nrecomputation can be expensive
Model <|-- DerivedModel
@enduml
